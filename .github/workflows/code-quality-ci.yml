name: Quality Gate [Linter & Test & SonarCloud]

on: [pull_request]

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Config git with private repos
        env:
          GO_REPO_TOKEN: ${{ secrets.GO_REPO_TOKEN }}
        run: |
          git config --global url."https://${GO_REPO_TOKEN}:x-oauth-basic@github.com/".insteadOf https://github.com/
      - uses: actions/cache@v2
        with:
          path: ~/.cache/golangci-lint
          key: ${{ runner.os }}-golangci-lint-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-golangci-lint-
      - uses: actions/cache@v2
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-gobuild-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-gobuild-
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Run Linter
        uses: reviewdog/action-golangci-lint@v1
        with:
          golangci_lint_flags: "--exclude-use-default=false --skip-dirs-use-default"
          reporter: github-pr-review
          level: error
  test:
    runs-on: ubuntu-latest
    services:
      postgresql:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: rf_customer_test
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Config git with private repos
        env:
          GO_REPO_TOKEN: ${{ secrets.GO_REPO_TOKEN }}
        run: |
          git config --global url."https://${GO_REPO_TOKEN}:x-oauth-basic@github.com/".insteadOf https://github.com/
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Install dependencies
        run: go mod tidy
      - name: Run test with coverage
        env:
          DB_URL: postgres://postgres:postgres@localhost:5432/rf_customer_test?sslmode=disable
        run: |
          go test -p 1 -v -coverprofile cover.out ./...
          go tool cover -html=cover.out -o cover.html
      - name: Upload test coverage to artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ${{ github.workspace }}/cover.html
          name: ${{ runner.os }}-${{ github.head_ref }}-coverage
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectKey=golang-fiber-base-project
            -Dsonar.organization=rabbitcare
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.language=go
            -Dsonar.sources=.
            -Dsonar.sourceEncoding=UTF-8
            -Dsonar.tests=.
            -Dsonar.exclusions=**/*_test.go,.git/**,coverage.html,cover.html,commitlint.config.js
            -Dsonar.test.inclusions=/**/*_test.go
            -Dsonar.go.tests.reportPaths=report.json
            -Dsonar.go.coverage.reportPaths=coverage.out
            -Dsonar.verbose=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}